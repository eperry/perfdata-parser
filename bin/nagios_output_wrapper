#!/usr/bin/env node
/*
 * Copyright (c) 2017, Anthony DeDominic <adedomin@gmail.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

var path = require('path')
const { spawn } = require('child_process')

function removeNaN(k, v) {
    // NaN
    if (v !== v)
        return
    return v
}

var pretty=2
var opt = { throwErr: true, flatten: true, message: true}
var perf =""
var plugin = {
  command: process.argv[2],
  args: process.argv.slice(3),
  options: {
    env: process.env,
  //  shell: "/bin/bash"
  //  stdio: "inherit"
  }
}
//console.log(plugin)
const child = spawn(plugin['command'], plugin['args'])

child.on("error", data => {
    console.error(data)
})
child.stdout.on('data', data => {
    perf += data
})

child.stderr.on('data', data => {
    console.error(data)
})

child.on('close', () => {
})
child.on('exit', function (code, signal) {
   plugin.code = code
   plugin.signal =  signal
   try {
      plugin.output =  require(path.join(__dirname, '../index.js'))(perf, opt) || null
      console.log( JSON.stringify( plugin, null, pretty ))
      console.log( "raw output\n", perf)
   }catch (e) {
      console.error(e.toString())
      process.exit(1)
   }
});

